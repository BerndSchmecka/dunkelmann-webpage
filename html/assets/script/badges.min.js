/*! *****************************************************************************
Copyright (c) Dunkelmann 2022. All rights reserved.

This code is licensed under the BSD License
You should have received a copy of the BSD License
with this code and it is also available through
the world-wide-web at <https://files.dunkelmann.eu/license.txt>.
If you did not receive a copy of the BSD License
and are unable to obtain it through the world-wide-web,
please send a note to <business@dunkelmann.eu> so we can mail you a copy
immediately.
***************************************************************************** */
Vue.component("badge-card",{props:["card"],template:'\n    <div class="col-md-auto">\n    <div class="badge-object">\n        <div class="badge-icon">\n            <img class="badge-image" :src="card.base_url + \'_details.svg\'" :alt="card.name">\n        </div>\n        <div class="badge-icon">\n            <img class="badge-image" :src="card.base_url + \'.svg\'" :alt="card.name">\n        </div>\n        <div class="badge-name">\n            <div class="badge-name-text">{{ card.name }}</div>\n        </div>\n        <div class="badge-desc">\n            <div class="badge-small-text">{{ card.description }}</div>\n        </div>\n        <div class="badge-uuid">\n            <div class="badge-guid-text">{{ card.uuid }}</div>\n        </div>\n        <div class="badge-date">\n            <div class="badge-small-text">{{ card.date }}</div>\n        </div>\n    </div>\n</div>\n    '});var app=new Vue({el:"#badgesApp",data:{revisionValue:"latest",revisionList:[],rev:0,lastMod:0,cards:[],isLoading:!0},created:function(){this.queryBadges(),this.getCachedRevisions()},methods:{getCachedRevisions:function(){var e=new XMLHttpRequest;e.onreadystatechange=function(){if(4===e.readyState&&200===e.status){var a=JSON.parse(e.responseText);app.revisionList=[],a.cachedRevisions.slice().reverse().forEach(e=>{app.revisionList.push({name:e,id:e})})}},e.open("GET",window.GLOBAL_ENV.BADGE_REVISIONS_ENDPOINT,!0),e.send()},queryBadges:function(){this.isLoading=!0,this.cards=[];var e=new XMLHttpRequest;e.onreadystatechange=function(){if(4===e.readyState&&200===e.status){var a=JSON.parse(e.responseText);app.rev=a.body.revision,app.lastMod=a.body.timestamp,a.body.badges.forEach(e=>{app.cards.push({uuid:e.uuid,name:e.name,base_url:e.url,description:e.description,date:parseUnixTime(e.timestamp),value:e.value})}),app.isLoading=!1}},e.open("POST",window.GLOBAL_ENV.BADGE_ENDPOINT,!0),e.send(JSON.stringify({revision:this.revisionValue}))},parseUnixTime:function(e){var a=new Date(1e3*e),s="0"+a.getDate(),i="0"+(a.getMonth()+1),d=a.getFullYear(),n="0"+a.getHours(),t="0"+a.getMinutes(),r="0"+a.getSeconds();return s.substr(-2)+"."+i.substr(-2)+"."+d+" - "+n.substr(-2)+":"+t.substr(-2)+":"+r.substr(-2)}},watch:{revisionValue:function(){this.queryBadges()}}});
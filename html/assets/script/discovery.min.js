/*! *****************************************************************************
Copyright (c) Dunkelmann 2022. All rights reserved.

This code is licensed under the BSD License
You should have received a copy of the BSD License
with this code and it is also available through
the world-wide-web at <https://files.dunkelmann.eu/license.txt>.
If you did not receive a copy of the BSD License
and are unable to obtain it through the world-wide-web,
please send a note to <business@dunkelmann.eu> so we can mail you a copy
immediately.
***************************************************************************** */
getEndpointMode=function(){const e=window.location.search,a=new URLSearchParams(e);return a.has("mode")?a.get("mode"):"tsProd"},randomBanner=function(e){const a=[["rgba(2,25,0,1)","rgba(28,97,20,1)","rgba(16,173,2,1)","rgba(31,255,0,1)"],["rgba(2,0,36,1)","rgba(39,39,200,1)","rgba(2,117,215,1)","rgba(0,212,255,1)"],["rgba(25,0,0,1)","rgba(97,20,20,1)","rgba(173,2,2,1)","rgba(255,0,0,1)"],["rgba(25,25,0,1)","rgba(97,97,20,1)","rgba(169,173,2,1)","rgba(254,255,0,1)"],["rgba(23,0,25,1)","rgba(88,20,97,1)","rgba(157,2,173,1)","rgba(226,0,255,1)"],["rgba(25,14,0,1)","rgba(97,60,20,1)","rgba(173,94,2,1)","rgba(255,128,0,1)"]],t=a[e.charCodeAt(3)%a.length];return`linear-gradient(180deg, ${t[0]} 0%, ${t[1]} 33%, ${t[2]} 63%, ${t[3]} 100%);`},randomIcon=function(e){return`https://www.gravatar.com/avatar/${CryptoJS.MD5(e)}?s=128&d=identicon`},Vue.directive("emoji",{inserted(e){twemoji.parse(e,{size:"svg",ext:".svg"})}}),Vue.component("discovery-card",{props:["card"],template:'\n    <div class="col-md-auto">\n    <div class="discovery-object" v-emoji>\n        <div class="discovery-banner" :style="card.banner"></div>\n        <div class="discovery-icon">\n            <span :style="card.icon"></span>\n        </div>\n        <div class="discovery-name">\n            <div class="discovery-name-text" :title="card.name"> {{ card.name }} </div>\n        </div>\n        <div class="discovery-people">\n            <div class="discovery-people-icon"><i class="fas fa-user fa-discovery-icon"></i></div>\n            <div class="discovery-small-text discovery-people-text"> {{ card.people }} </div>\n        </div>\n        <div class="discovery-desc">\n            <div class="discovery-small-text"> {{ card.topic }} </div>\n        </div>\n        <div class="discovery-created discovery-small-text"> {{ card.created }} </div>\n        <div class="discovery-footer">\n            <div class="discovery-connect">\n                <div class="discovery-small-text discovery-link" :title="card.tooltips.join"> {{ card.join }} </div>\n            </div>\n                <div class="discovery-bookmark" title="Bookmark this server" v-if="card.isServer">\n                    <i class="fas fa-bookmark fa-bookmark-icon"></i>\n                </div>\n                <div class="discovery-channel" :title="card.tooltips.channel" v-if="card.isServer">\n                    <i :class="card.classes.channel"></i>\n                </div>\n                <div class="discovery-homebase" :title="card.tooltips.homebase" v-if="card.isServer">\n                    <i :class="card.classes.homebase"></i>\n                </div>\n        </div>\n    </div>\n</div>\n    '});var app=new Vue({el:"#discoveryApp",data:{cards:[],nodeValue:"",filterValue:"",isLoading:!0,pagination:{elementsPerPage:30,currentStart:0,backwardButton:!1,forwardButton:!1},annotationText:"Laden ...",webSocket:null},created:function(){this.initWebSocket()},methods:{initWebSocket:function(){null!=this.webSocket&&this.webSocket.close(),this.webSocket=new WebSocket(window.GLOBAL_ENV.WS_API_ENDPOINT),this.webSocket.onmessage=function(e){var a=JSON.parse(e.data);if(0===a.type){webSocketLog(a.msg);var t=JSON.parse(decodeURIComponent(escape(window.atob(a.payload))));t.entries.forEach(e=>{app.cards.push({id:e.id,name:e.name,topic:e.topic?e.topic:"No description available",people:(e.members?e.members:0)+("server"===e.type.toLowerCase()?" - "+e.address:""),created:`First seen: ${parseUnixTime(e.created)}`,join:`Join ${e.type.toLowerCase()}`,banner:`background: ${randomBanner(e.id)}`,icon:`background: url('${randomIcon(e.id)}'); background-size: 64px 64px;`,tooltips:{join:"server"===e.type.toLowerCase()?"Open a connection to this server":`Join this ${e.type.toLowerCase()}`,channel:e.canCreateChannel?"Guests can create channels":"Guests can't create channels",homebase:e.canCreateHomebase?"Guests can use this server as homebase":"Guests can't use this server as homebase"},classes:{channel:`fas fa-plus-square ${e.canCreateChannel?"fa-channel-icon text-primary":"fa-channel-icon"}`,homebase:`fas fa-home ${e.canCreateHomebase?"fa-homebase-icon text-primary":"fa-homebase-icon"}`},isServer:"server"===e.type.toLowerCase()})}),app.annotationText=app.cards.length>0?`Zeige ${app.cards.length} (${t.start+1} - ${t.start+app.cards.length}) von ${t.total} Einträgen`:"Keine Einträge gefunden",t.total>t.start+t.entries.length?app.pagination.forwardButton=!0:app.pagination.forwardButton=!1,t.start>0?app.pagination.backwardButton=!0:app.pagination.backwardButton=!1,app.isLoading=!1}else 2===a.type?webSocketLog(`Error: ${a.msg}`):3===a.type?(webSocketLogDebug(`Received PING request from server: "${a.msg}"`),app.webSocket.send(JSON.stringify({command:"PONG",version:0,payload:a.payload})),webSocketLogDebug(`Sent PONG response to server: pongId=${base64ToUuid(a.payload)}`)):4===a.type?webSocketLogDebug(`Server acknowledged PONG response: "${a.msg}"`):webSocketLogWarn("WebSocket returned an response with an unknown type.")},this.webSocket.onopen=function(e){webSocketLog("WebSocket connected"),app.doQuery("*%3A*")},this.webSocket.onclose=function(e){webSocketLog("WebSocket disconnected"),setTimeout(function(){app.initWebSocket()},1e3)},this.webSocket.onerror=function(e){webSocketLog("WebSocket error")}},queryWithFilter:function(){app.pagination.currentStart=0,app.doQuery((this.nodeValue?`%2B*${encodeURIComponent(this.nodeValue)}*`:"*%3A*")+this.filterValue)},doQuery:function(e){if(this.isLoading=!0,this.cards=[],this.pagination.backwardButton=!1,this.pagination.forwardButton=!1,this.annotationText="Laden ...",null==this.webSocket&&this.initWebSocket(),this.webSocket.readyState!==WebSocket.OPEN)return void webSocketLog("WebSocket not ready");let a=btoa(JSON.stringify({endpointMode:getEndpointMode(),queryString:e,startCount:this.pagination.currentStart,rowCount:this.pagination.elementsPerPage,sortBy:"members",sortOrder:"desc"}));this.webSocket.send(JSON.stringify({command:"getTeamSpeakRoomDiscovery",version:1,payload:a}))},goForward:function(){this.pagination.forwardButton&&!this.isLoading&&(this.pagination.currentStart+=this.pagination.elementsPerPage,this.doQuery((this.nodeValue?`%2B*${encodeURIComponent(this.nodeValue)}*`:"*%3A*")+this.filterValue))},goBackward:function(){this.pagination.backwardButton&&!this.isLoading&&(this.pagination.currentStart-=this.pagination.elementsPerPage,this.doQuery((this.nodeValue?`%2B*${encodeURIComponent(this.nodeValue)}*`:"*%3A*")+this.filterValue))}},watch:{filterValue:function(){this.queryWithFilter()}}});